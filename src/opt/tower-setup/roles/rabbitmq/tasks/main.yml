---
- name: ensure /var/run/rabbitmq exists
  file: path=/var/run/rabbitmq state=directory mode=0750 owner=rabbitmq group=rabbitmq

- name: Disable all RabbitMQ plugins before upgrade
  file:
    path: /etc/rabbitmq/enabled_plugins
    state: absent

- name: Reset RabbitMQ database
  file:
    path: /var/lib/rabbitmq/mnesia
    state: absent

- name: Apply RabbitMQ environment Node Name
  template:
    dest: /etc/rabbitmq/rabbitmq-env.conf
    force: yes
    src: rabbitmq-env.conf.j2
    mode: '0600'
    owner: 'rabbitmq'
    group: 'rabbitmq'

- name: Apply RabbitMQ Configuration
  template:
    dest: /etc/rabbitmq/rabbitmq.conf
    force: yes
    src: rabbitmq.conf.j2
    mode: '0600'
    owner: 'rabbitmq'
    group: 'rabbitmq'

- name: Apply RabbitMQ Cookie
  template:
    dest: /var/lib/rabbitmq/.erlang.cookie
    force: yes
    src: erlang.cookie.j2
    mode: '0600'
    owner: 'rabbitmq'
    group: 'rabbitmq'

- name: Start the rabbitmq service
  command: /usr/sbin/rabbitmq-server -detached

- name: wait for rabbitmq service to be running
  wait_for:
    port: "{{ rabbitmq_port }}"

- name: Activate rabbitmq plugins
  rabbitmq_plugin:
    names: rabbitmq_management,rabbitmq_management_agent,rabbitmq_federation,rabbitmq_federation_management
    state: enabled

- name: Create the rabbitmq vhost
  rabbitmq_vhost:
    name: "{{ rabbitmq_vhost }}"
    state: present
    node: "rabbitmq@{{ rabbitmq_host }}"

- name: Create the rabbitmq user
  rabbitmq_user:
    user: "{{ rabbitmq_username }}"
    password: "{{ rabbitmq_password }}"
    tags: "administrator,management"
    vhost: "{{ rabbitmq_vhost }}"
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present
    force: yes
    node: "rabbitmq@{{ rabbitmq_host }}"

- name: Remove default guest user
  command: rabbitmqctl delete_user guest

- name: Stop rabbitmq
  command: /usr/sbin/rabbitmqctl stop
